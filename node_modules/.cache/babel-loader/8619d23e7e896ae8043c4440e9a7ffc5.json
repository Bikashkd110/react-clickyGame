{"ast":null,"code":"var _jsxFileName = \"/Users/bikashkadariya/Desktop/clicky/src/App.js\";\nimport React, { component } from 'react';\nimport './App.css';\nimport imgholder from \"./components/imgholder\";\nimport navbar from \"./components/navbar\";\nimport jumbtorn from \"./components/jumbotorn\";\nimport wrapper from \"./components/wrapper\";\nimport footer from \"./components/footer\";\nimport cards from \"./cards.json\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      cards,\n      clickedArray: [],\n      topScore: 0,\n      score: 0,\n      message: \"\",\n      shakeit: \"false\"\n    };\n\n    this.clickPicture = id => {\n      // Arrange the pictures in a random manner\n      const shuffledArray = this.shuffleArray(cards);\n      this.setState({\n        cards: shuffledArray\n      }); // if clicked an image already clicked set this.state.score = 0; empty clickeadArray, end of if block\n\n      if (this.state.clickedArray.includes(id)) {\n        this.setState({\n          score: 0,\n          clickedArray: [],\n          message: \"Incorrect!! Game Over ☹️ Click an image to start again!\",\n          shakeit: \"true\"\n        });\n      } else {\n        this.setState({\n          clickedArray: this.state.clickedArray.concat([id]),\n          score: this.state.score + 1,\n          message: \"Correct!! 🙂\",\n          shakeit: \"false\"\n        });\n      } // set topscore = score if score>topscore.\n\n\n      if (this.state.score > this.state.topScore) {\n        this.setState({\n          topScore: this.state.score\n        });\n      } // shake the wrapper if shakeit is set to true\n\n    };\n\n    this.shuffleArray = picturesArray => {\n      for (let i = picturesArray.length - 1; i > 0; i--) {\n        const j = Math.floor(Math.random() * (i + 1));\n        var _ref = [picturesArray[j], picturesArray[i]];\n        picturesArray[i] = _ref[0];\n        picturesArray[j] = _ref[1];\n      }\n\n      return picturesArray;\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      className: \"main-body\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, React.createElement(\"navbar\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }), React.createElement(\"jumbtorn\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }), React.createElement(\"wrapper\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }), React.createElement(\"footer\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bikashkadariya/Desktop/clicky/src/App.js"],"names":["React","component","imgholder","navbar","jumbtorn","wrapper","footer","cards","App","Component","state","clickedArray","topScore","score","message","shakeit","clickPicture","id","shuffledArray","shuffleArray","setState","includes","concat","picturesArray","i","length","j","Math","floor","random","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,MAAMC,GAAN,SAAkBC,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BC,KAF0B,GAElB;AACNH,MAAAA,KADM;AAENI,MAAAA,YAAY,EAAE,EAFR;AAGNC,MAAAA,QAAQ,EAAE,CAHJ;AAINC,MAAAA,KAAK,EAAE,CAJD;AAKNC,MAAAA,OAAO,EAAE,EALH;AAMNC,MAAAA,OAAO,EAAE;AANH,KAFkB;;AAAA,SAU1BC,YAV0B,GAUXC,EAAE,IAAI;AACnB;AACA,YAAMC,aAAa,GAAG,KAAKC,YAAL,CAAkBZ,KAAlB,CAAtB;AACA,WAAKa,QAAL,CAAc;AAACb,QAAAA,KAAK,EAAEW;AAAR,OAAd,EAHmB,CAInB;;AACA,UAAI,KAAKR,KAAL,CAAWC,YAAX,CAAwBU,QAAxB,CAAiCJ,EAAjC,CAAJ,EAA0C;AACxC,aAAKG,QAAL,CAAc;AAAEP,UAAAA,KAAK,EAAE,CAAT;AAAYF,UAAAA,YAAY,EAAE,EAA1B;AAA8BG,UAAAA,OAAO,EAAE,yDAAvC;AAAkGC,UAAAA,OAAO,EAAE;AAA3G,SAAd;AACD,OAFD,MAGK;AACH,aAAKK,QAAL,CAAc;AACZT,UAAAA,YAAY,EAAE,KAAKD,KAAL,CAAWC,YAAX,CAAwBW,MAAxB,CAA+B,CAACL,EAAD,CAA/B,CADF;AAEZJ,UAAAA,KAAK,EAAE,KAAKH,KAAL,CAAWG,KAAX,GAAmB,CAFd;AAGZC,UAAAA,OAAO,EAAE,cAHG;AAIZC,UAAAA,OAAO,EAAE;AAJG,SAAd;AAMD,OAfkB,CAgBnB;;;AACA,UAAI,KAAKL,KAAL,CAAWG,KAAX,GAAmB,KAAKH,KAAL,CAAWE,QAAlC,EAA4C;AAC1C,aAAKQ,QAAL,CAAc;AAAER,UAAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWG;AAAvB,SAAd;AACD,OAnBkB,CAoBnB;;AACD,KA/ByB;;AAAA,SAgC1BM,YAhC0B,GAgCVI,aAAD,IAAmB;AAC9B,WAAK,IAAIC,CAAC,GAAGD,aAAa,CAACE,MAAd,GAAuB,CAApC,EAAuCD,CAAC,GAAG,CAA3C,EAA8CA,CAAC,EAA/C,EAAmD;AAC/C,cAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiBL,CAAC,GAAG,CAArB,CAAX,CAAV;AAD+C,mBAER,CAACD,aAAa,CAACG,CAAD,CAAd,EAAmBH,aAAa,CAACC,CAAD,CAAhC,CAFQ;AAE9CD,QAAAA,aAAa,CAACC,CAAD,CAFiC;AAE5BD,QAAAA,aAAa,CAACG,CAAD,CAFe;AAGlD;;AACD,aAAOH,aAAP;AACH,KAtCyB;AAAA;;AAuC1BO,EAAAA,MAAM,GAAG;AACP,WAEI;AAAK,MAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,EAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHA,EAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAJA,EAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALA,CAFJ;AAqBD;;AA7DyB;;AA+D5B,eAAetB,GAAf","sourcesContent":["import React, { component } from 'react';\r\nimport './App.css';\r\nimport imgholder from \"./components/imgholder\";\r\nimport navbar from \"./components/navbar\";\r\nimport jumbtorn from \"./components/jumbotorn\"\r\nimport wrapper from \"./components/wrapper\";\r\nimport footer from \"./components/footer\"\r\nimport cards from \"./cards.json\";\r\n\r\nclass App extends Component {\r\n  // Setting this.state.cards to the cards json array\r\n  state = {\r\n    cards,\r\n    clickedArray: [],\r\n    topScore: 0,\r\n    score: 0,\r\n    message: \"\",\r\n    shakeit: \"false\"\r\n  };\r\n  clickPicture = id => {\r\n    // Arrange the pictures in a random manner\r\n    const shuffledArray = this.shuffleArray(cards);\r\n    this.setState({cards: shuffledArray});\r\n    // if clicked an image already clicked set this.state.score = 0; empty clickeadArray, end of if block\r\n    if (this.state.clickedArray.includes(id)) {\r\n      this.setState({ score: 0, clickedArray: [], message: \"Incorrect!! Game Over ☹️ Click an image to start again!\", shakeit: \"true\"});\r\n    }\r\n    else {\r\n      this.setState({\r\n        clickedArray: this.state.clickedArray.concat([id]),\r\n        score: this.state.score + 1,\r\n        message: \"Correct!! 🙂\",\r\n        shakeit: \"false\"\r\n      });\r\n    }\r\n    // set topscore = score if score>topscore.\r\n    if (this.state.score > this.state.topScore) {\r\n      this.setState({ topScore: this.state.score });\r\n    }\r\n    // shake the wrapper if shakeit is set to true\r\n  }\r\n  shuffleArray = (picturesArray) => {\r\n      for (let i = picturesArray.length - 1; i > 0; i--) {\r\n          const j = Math.floor(Math.random() * (i + 1));\r\n          [picturesArray[i], picturesArray[j]] = [picturesArray[j], picturesArray[i]];\r\n      }\r\n      return picturesArray;\r\n  }\r\n  render() {\r\n    return (\r\n      \r\n        <div className = \"main-body\">\r\n        \r\n        <navbar/>\r\n        <jumbtorn/>\r\n        <wrapper/>\r\n        <footer/>\r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        \r\n        </div>\r\n        \r\n         \r\n    \r\n    );\r\n  }\r\n}\r\nexport default App;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}